openapi: 3.0.1
info:
  title: E-Commerce API Documentation
  description: Simple E-Commerce API application made with Express and PostgreSQL.
  version: 1.0.0
servers:
  - url: //localhost:3000/
paths:
  /auth/register:
    summary: Register a new user
    post:
      summary: Registers a new user
      description: Create a user object and adds it to the database
      operationId: register
      responses:
        '200':
          description: 201 Created
        '500':
          description: 500 Internal Server Error
      tags:
        - auth
  /auth/login:
    summary: Logs in a user
    post:
      summary: Logs in a user
      description: >-
        Checks the database for the user and returns successful if they are
        found
      operationId: login
      responses:
        '200':
          description: 200 OK
        '401':
          description: 401 Unauthorized
      tags:
        - auth
  /auth/status:
    summary: Checks a user is logged in
    get:
      summary: Checks if user is logged in
      description: Returns a success
      operationId: loginStatus
      responses:
        '200':
          description: 200 OK
        '401':
          description: 401 Unauthorized
      tags:
        - auth
  /auth/logout:
    summary: Logs out user
    description: Logs out currently logged in user
    post:
      summary: Logs out user
      description: Logs out the current users session
      operationId: logout
      responses:
        '200':
          description: 200 OK
        '400':
          description: 400 Bad Request
        '401':
          description: 401 Unauthorized
      tags:
        - auth
  /items:
    summary: Gets all items
    get:
      summary: Gets all items
      description: ''
      operationId: getItems
      responses:
        '200':
          description: 200 OK
      tags:
        - items
  /items/{id}:
    summary: Gets specific item
    description: Gets the item based on the given ID
    parameters:
      - in: path
        name: id
        required: true
        description: Numberic ID of item to get
        schema:
          type: integer
    get:
      summary: Gets specific item
      description: ''
      operationId: getSingleItem
      responses:
        '200':
          description: 200 OK
        '404':
          description: 404 Item Not Found
      tags:
        - items
  /users:
    summary: Gets all users
    description: Gets all users in database
    get:
      summary: Gets all users
      description: Gets all users in database
      operationId: getUsers
      responses:
        '200':
          description: 200 OK
      tags:
        - users
  /users/{id}:
    summary: Gets specific user
    description: Gets specific user based on ID
    parameters:
      - in: path
        name: id
        required: true
        description: Numeric ID of user to get
        schema:
          type: integer
    get:
      summary: Gets specific users
      description: Gets specific user based on ID
      operationId: getSingleUser
      responses:
        '200':
          description: 200 OK
        '404':
          description: 404 User not found
      tags:
        - users
    delete:
      summary: Deletes user from database
      description: Deletes the user from the database based on ID
      operationId: deleteUser
      responses:
        '200':
          description: 200 OK
        '404':
          description: 404 User not found
      tags:
        - users
  /users/profile:
    summary: Gets the current user
    description: Gets the currently logged in users information
    get:
      summary: Gets current users profile
      description: Gets the profile of the currently logged in user
      operationId: userProfile
      responses:
        '200':
          description: 200 OK
        '404':
          description: 404 User not found
      tags:
        - users
    put:
      summary: Updates current users profile
      description: Updates the currently logged in users profile information
      operationId: updateUser
      responses:
        '200':
          description: 200 OK
        '400':
          description: 400 Nothing to change
      tags:
        - users
  /carts:
    summary: Gets the current users cart
    description: Gets the items in the current users cart
    get:
      summary: Gets cart items of logged in user or all cart information
      description: >-
        Gets cart items of logged in user or returns the information  - not
        items - for all carts
      operationId: getUserCart
      responses:
        '200':
          description: 200 OK
        '404':
          description: 404 No items in cart / No carts in database
      tags:
        - carts
    post:
      summary: Creates/Updates the current users cart
      description: Creates the cart and adds items to the currently logged in users cart
      operationId: addToCart
      responses:
        '200':
          description: 200 OK
        '400':
          description: 400 Bad Request
        '401':
          description: 401 Not authorized
        '404':
          description: 404 Item not found
      tags:
        - carts
    delete:
      summary: Deletes information of current users cart
      description: Deletes information of the current users cart from the database
      operationId: deleteUserCart
      responses:
        '200':
          description: 200 OK
        '404':
          description: 404 No items in cart / No carts in database
      tags:
        - carts
  /carts/{id}:
    summary: Gets information on specific cart
    description: Gets the information - not the items - of the cart with the given ID
    parameters:
      - in: path
        name: id
        required: true
        description: Numeric ID of cart to get
        schema:
          type: integer
    get:
      summary: Gets specific users
      description: Gets specific user based on ID
      operationId: getSingleCart
      responses:
        '200':
          description: 200 OK
        '404':
          description: 404 Cart not found
      tags:
        - carts
    delete:
      summary: Deletes information of specific cart
      description: Deletes information of the specific cart based on the ID
      operationId: deleteCart
      responses:
        '200':
          description: 200 OK
        '404':
          description: 404 Cart not found
      tags:
        - carts
  /carts/checkout:
    summary: Checks out the user and creates an order
    description: Creates an order from the current users cart
    post:
      summary: Checks out the current users cart
      description: Checks out the current users cart and adds an order to the database
      operationId: checkoutCart
      responses:
        '200':
          description: 200 OK
        '404':
          description: 404 Cart/User/Items not found
      tags:
        - carts
  /orders:
    summary: Gets all orders
    description: Gets all the orders in the database
    get:
      summary: Gets all orders
      description: Gets all the orders in the database
      operationId: getOrders
      responses:
        '200':
          description: 200 OK
        '404':
          description: 404 Orders not found
      tags:
        - orders
  /orders/user:
    summary: Gets orders made by user
    description: Get all orders made by the currently logged in user
    get:
      summary: Gets current users orders
      description: Gets the orders created by the currently logged in user
      operationId: getUserOrders
      responses:
        '200':
          description: 200 OK
        '401':
          description: 401 Not authorized
        '404':
          description: 404 Orders not found
      tags:
        - orders
  /orders/user/{id}:
    summary: Gets the items of the order
    description: Get the items from the current users orders based on the ID
    parameters:
      - in: path
        name: id
        required: true
        description: Numeric ID of order to get
        schema:
          type: integer
    get:
      summary: Gets specific order of the current user
      description: Gets than orderd created by the currently logged in user specified by its ID
      operationId: getSingleUserOrders
      responses:
        '200':
          description: 200 OK
        '401':
          description: 401 Not authorized
        '404':
          description: 404 Orders not found
      tags:
        - orders
  /orders/{id}:
    summary: Gets specific order
    description: Gets order by specific ID
    parameters:
      - in: path
        name: id
        required: true
        description: Numeric ID of order to get
        schema:
          type: integer
    get:
      summary: Gets specific order of the current user
      description: Gets than orderd created by the currently logged in user specified by its ID
      operationId: getSingleOrder
      responses:
        '200':
          description: 200 OK
        '404':
          description: 404 Orders not found
      tags:
        - orders
  /orders/{id}/{order_id}:
    summary: Gets the items in the order of the specified user
    description: >-
      Gets the items in the specified order of the specific user without being
      logged in as that user
    parameters:
      - in: path
        name: id
        required: true
        description: Numeric ID of user to get
        schema:
          type: integer
      - in: path
        name: order_id
        required: true
        description: Numeric ID of order to get
        schema:
          type: integer
    get:
      summary: Gets specific order of the current user
      description: Gets than orderd created by the currently logged in user specified by its ID
      operationId: getSingleOrdersItems
      responses:
        '200':
          description: 200 OK
        '404':
          description: 404 Order not found
      tags:
        - orders
